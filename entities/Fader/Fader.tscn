[gd_scene load_steps=6 format=2]

[ext_resource path="res://entities/Fader/Untitled.png" type="Texture" id=1]

[sub_resource type="Animation" id=1]
resource_name = "FadeIn"
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:material:shader_param/cut_off")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}

[sub_resource type="Animation" id=2]
resource_name = "FadeOut"
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:material:shader_param/cut_off")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.0 ]
}

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;
render_mode unshaded;

uniform float cut_off : hint_range(0.0, 1.0);
uniform float smooth_size : hint_range(0.0, 1.0);
uniform sampler2D mask : hint_albedo;

void fragment()
{
	float value = texture(mask, UV).r;
	float alpha = smoothstep(cut_off, cut_off + smooth_size, value + smooth_size);
	COLOR = vec4(COLOR.rbg, alpha);
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/cut_off = 0.0
shader_param/smooth_size = 0.0
shader_param/mask = ExtResource( 1 )

[node name="Fader" type="CanvasLayer"]
layer = 0

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "FadeIn"
anims/FadeIn = SubResource( 1 )
anims/FadeOut = SubResource( 2 )

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource( 4 )
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}
